#--------- Generic stuff all our Dockerfiles should start with so we get caching ------------
FROM python:3.7-slim-stretch as prod

RUN mkdir -p /usr/src/{app,geonode}

WORKDIR /usr/src/app

# Install system dependencies
RUN echo "Updating apt-get" && \
    apt-get update && \
    echo "Installing build dependencies" && \
    apt-get install -y gcc make libc-dev musl-dev libpcre3 libpcre3-dev g++ && \
    echo "Installing Pillow dependencies" && \
    # RUN apt-get install -y NOTHING ?? It was probably added in other packages... ALPINE needed jpeg-dev zlib-dev && \
    echo "Installing GDAL dependencies" && \
    apt-get install -y libgdal-dev libcurl4-gnutls-dev librtmp-dev && \
    echo "Installing healthceck dependencies" && \
    apt-get install -y curl && \
    echo "Python server" && \
    pip install uwsgi && \
    apt-get install -y git && \
    echo "Node js" && \
    curl -sL https://deb.nodesource.com/setup_12.x -o nodesource_setup.sh && \
    bash nodesource_setup.sh && \
    apt-get install -y nodejs && \
    echo "Removing build dependencies and cleaning up" && \
    # TODO : cleanup apt-get with something like apt-get -y --purge autoremove gcc make libc-dev musl-dev libpcre3 libpcre3-dev g++ && \
    apt-get -y --purge autoremove make libc-dev musl-dev g++ && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf ~/.cache/pip

ADD deployment/docker/REQUIREMENTS.txt /REQUIREMENTS.txt
RUN pip install -r /REQUIREMENTS.txt; pip install uwsgi

# Install grunt
RUN npm --quiet -g install yuglify && npm install -g grunt-cli
ADD deployment/docker/package.json /package.json
ADD deployment/docker/Gruntfile.js /Gruntfile.js
RUN cd / && npm install

#USER www-data
ADD . /home/web/django_project
WORKDIR /home/web/django_project
RUN cd bims && npm install --quiet -g webpack@5.50.0 && npm install --quiet -g webpack-cli@4.8.0 && npm install --quiet && webpack --mode production

# # This section taken on 2 July 2015 from
# # https://docs.docker.com/examples/running_ssh_service/
# # Sudo is needed by pycharm when it tries to pip install packages
# RUN apt-get update && apt-get install -y openssh-server sudo
# RUN mkdir /var/run/sshd
# RUN echo 'root:docker' | chpasswd
# RUN echo "PermitRootLogin yes" >> /etc/ssh/sshd_config

# SSH login fix. Otherwise user is kicked off after login
# RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd

ENV NOTVISIBLE "in users profile"
RUN echo "export VISIBLE=now" >> /etc/profile

# End of cut & paste section

ADD REQUIREMENTS-dev.txt /REQUIREMENTS-dev.txt
RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python get-pip.py
RUN pip install -r /REQUIREMENTS-dev.txt
ADD bashrc /root/.bashrc

# RUN apt-get install -y chromium
# RUN mkdir -p /opt/karma
# RUN npm install -g karma
# RUN cd / && npm install

# RUN apt-get install vim -y
# ADD karma.conf.docker.js /karma.conf.js

# Creates a non-root user with an explicit UID and adds permission to access the /app folder
# For more info, please refer to https://aka.ms/vscode-docker-python-configure-containers
RUN adduser -u 5678 --disabled-password --gecos "" appuser && chown -R appuser /home/web/django_project
USER appuser

CMD ["gunicorn", "--bind", "0.0.0.0:8000", "core.wsgi"]
