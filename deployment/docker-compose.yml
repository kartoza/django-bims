#
# Production server with UWSGI configured to run on port 8080
# and web configured to run directly on port 80
#
# docker-compose build
# docker-compose up -d web
#
# See accompanying Make commands for easy collectstatic etc.

smtp:
  # Note you cannot scale if you use container_name
  container_name: bims-smtp
  image: catatnight/postfix
  hostname: postfix
  environment:
    # You could change this to something more suitable
    - maildomain=kartoza.com
    - smtp_user=noreply:docker
  restart: unless-stopped

db:
  # Note you cannot scale if you use container_name
  container_name: bims-db
  image: kartoza/postgis:9.6-2.4
  volumes:
    #- ./pg/postgres_data:/var/lib/postgresql
    - ./backups:/backups
    - ./sql:/sql
  environment:
    - USERNAME=docker
    - PASS=docker
  restart: unless-stopped
#  Uncomment the next line to have an access with PGAdmin using localhost and port 25432 on your computer.
#  Only for development !
#  ports:
#    - "25432:5432"

elasticsearch:
  # Note you cannot scale if you use conteiner_name
  container_name: bims-elasticsearch
  restart: on-failure:5
  #  read_only: true
  image: elasticsearch:2.4.2
  hostname: elasticsearch
  environment:
    - cluster.name=docker-cluster
    - bootstrap.memory_lock=true
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  ports:
    - "9200:9200"

uwsgi:
  # Note you cannot scale if you use container_name
  container_name: bims-uwsgi
  build: docker
  hostname: uwsgi
  environment:
    - DATABASE_NAME=gis
    - DATABASE_USERNAME=docker
    - DATABASE_PASSWORD=docker
    - DATABASE_HOST=db
    - DJANGO_SETTINGS_MODULE=core.settings.prod_docker
    - VIRTUAL_HOST=bims.kartoza.com
    - VIRTUAL_PORT=8080
    - RABBITMQ_HOST=rabbitmq
    - HAYSTACK_HOST=elasticsearch
    - GEOCONTEXT_URL=http://localhost:65402
    - CONTACT_US_EMAIL=dimas@kartoza.com
  volumes:
    - ../../django-bims:/home/web/django_project
    - ./static:/home/web/static:rw
    - ./media:/home/web/media:rw
    - ./reports:/home/web/reports
    - ./logs:/var/log/
  links:
    - smtp:smtp
    - db:db
    - elasticsearch:elasticsearch
  restart: on-failure:5
  user: root

dbbackups:
  # Note you cannot scale if you use container_name
  container_name: bims-db-backups
  image: kartoza/pg-backup:9.4
  hostname: pg-backups
  volumes:
    - ./backups:/backups
  links:
    - db:db
  environment:
    # take care to let the project name below match that
    # declared in the top of the makefile
    - DUMPPREFIX=PG_bims
    # These are all defaults anyway, but setting explicitly in
    # case we ever want to ever use different credentials
    - PGUSER=docker
    - PGPASSWORD=docker
    - PGPORT=5432
    - PGHOST=db
    - PGDATABASE=gis
  restart: unless-stopped

# This is normally the main entry point for a production server
web:
  # Note you cannot scale if you use container_name
  container_name: bims-web
  image: nginx
  hostname: nginx
  volumes:
    - ./sites-enabled:/etc/nginx/conf.d:ro
    # I dont use volumes_from as I want to use the ro modifier
    - ./static:/home/web/static:ro
    - ./media:/home/web/media:ro
    - ./logs:/var/log/nginx
  links:
    - uwsgi:uwsgi
  ports:
    - "63200:8080"
  restart: unless-stopped

# This is the entry point for a development server.
# Run with --no-deps to run attached to the services
# from produ environment if wanted
devweb:
  # Note you cannot scale if you use container_name
  container_name: bims-dev-web
  build: docker
  dockerfile: Dockerfile-dev
  hostname: uwsgi
  environment:
    - DATABASE_NAME=gis
    - DATABASE_USERNAME=docker
    - DATABASE_PASSWORD=docker
    - DATABASE_HOST=db
    - DJANGO_SETTINGS_MODULE=core.settings.dev_docker
    - PYTHONPATH=/home/web/django_project
    - VIRTUAL_HOST=bims.kartoza.com
    - VIRTUAL_PORT=8080
    - RABBITMQ_HOST=rabbitmq
    - GEOCONTEXT_URL=http://localhost:65402
    - CONTACT_US_EMAIL=dimas@kartoza.com
  volumes:
    - ../../django-bims:/home/web/django_project
    - ./static:/home/web/static
    - ./media:/home/web/media
    - ./reports:/home/web/reports
    - ./logs:/var/log/
  links:
    - smtp:smtp
    - db:db
    - elasticsearch:elasticsearch
  ports:
    # for django test server
    - "63302:8080"
    # for ssh
    - "63303:22"
    # for karma tests
    - "63304:9876"

rabbitmq:
  image: library/rabbitmq
  hostname: rabbitmq
  environment:
    - RABBIT_PASSWORD=rabbit_test_password
    - USER=rabbit_user
    - RABBITMQ_NODENAME=rabbit
  restart: unless-stopped
