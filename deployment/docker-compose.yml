#
# Production server with UWSGI configured to run on port 8080
# and web configured to run directly on port 80
#
# docker-compose build
# docker-compose up -d web
#
# See accompanying Make commands for easy collectstatic etc.

version: '2'
volumes:
  geodatadir:
  rabbitmq:
services:
  smtp:
    image: catatnight/postfix
    hostname: postfix
    environment:
      # You could change this to something more suitable
      - maildomain=kartoza.com
      - smtp_user=noreply:docker
    restart: unless-stopped

  db:
    image: kartoza/postgis:9.6-2.4
    environment:
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
    restart: unless-stopped

  geoserver:
    image: geonode/spcgeonode:geoserver-3.0
    restart: unless-stopped
    environment:
      - HTTP_HOST=192.168.1.197
      - HTTP_PORT=63305
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admingeoserver
      - DATABASE_URL=postgres://docker:docker@db:5432/gis
      - GEODATABASE_URL=postgis://geonode_data:docker@db:5432/geonode_data
    depends_on:
      - db
    volumes:
      - geodatadir:/spcgeonode-geodatadir/

  bims_uwsgi:
    build:
      context: docker
      dockerfile: Dockerfile
    image: bims_uwsgi:latest

  uwsgi:
    build:
      context: docker
    hostname: uwsgi
    working_dir: /usr/src/geonode
    entrypoint: []
    environment:
      - DATABASE_NAME=gis
      - DATABASE_USERNAME=docker
      - DATABASE_PASSWORD=docker
      - DATABASE_HOST=db
      - DJANGO_SETTINGS_MODULE=core.settings.prod_docker
      - VIRTUAL_HOST=bims.kartoza.com
      - VIRTUAL_PORT=8080
      - RABBITMQ_HOST=rabbitmq
      - GEOCONTEXT_URL=https://geocontext.kartoza.com
      - GEOCONTEXT_COLLECTION_KEY=climate
      - CONTACT_US_EMAIL=dimas@kartoza.com
      - DEFAULT_BACKEND_UPLOADER=geonode.importer
      - DEFAULT_BACKEND_DATASTORE=datastore
      - GEONODE_DATABASE=gis
      - GEONODE_DATABASE_PASSWORD=docker
      - GEONODE_GEODATABASE=geonode_data
      - GEONODE_GEODATABASE_PASSWORD=docker
      - GEONODE_GEODATABASE_USERNAME=geonode_data
      - BROKER_URL=amqp://rabbitmq:5672
      - DATABASE_URL=postgis://docker:docker@db:5432/gis
      - GEODATABASE_URL=postgis://geonode_data:docker@db:5432/geonode_data
      - GEOSERVER_LOCATION=http://geoserver/geoserver/
      - APP_NAME=bims
    links:
      - smtp:smtp
      - db:db
      - geoserver:geoserver
      - rabbitmq:rabbitmq
      - worker:worker
    restart: unless-stopped
    user: root
    extra_hosts:
      - 'localhost: 192.168.1.197'

  worker:
    build:
      context: docker
    hostname: worker
    working_dir: /home/web/django_project
    command: celery worker --app=bims.celery:app -B -l debug
    entrypoint: []
    environment:
      - DATABASE_NAME=gis
      - DATABASE_USERNAME=docker
      - DATABASE_PASSWORD=docker
      - DATABASE_HOST=db
      - DJANGO_SETTINGS_MODULE=core.settings.dev_docker
      - VIRTUAL_HOST=bims.kartoza.com
      - VIRTUAL_PORT=8080
      - RABBITMQ_HOST=rabbitmq
      - GEOCONTEXT_URL=https://geocontext.kartoza.com
      - CONTACT_US_EMAIL=dimas@kartoza.com
      - APP_NAME=bims
      - ASYNC_SIGNALS=True
      - ASYNC_SIGNALS_GEONODE=True
      - DEFAULT_BACKEND_UPLOADER=geonode.importer
      - DEFAULT_BACKEND_DATASTORE=datastore
      - GEONODE_DATABASE=gis
      - GEONODE_DATABASE_PASSWORD=docker
      - GEONODE_GEODATABASE=geonode_data
      - GEONODE_GEODATABASE_PASSWORD=docker
      - GEONODE_GEODATABASE_USERNAME=geonode_data
      - PYTHONPATH=/home/web/django_project:/usr/src/geonode
      - DATABASE_URL=postgis://docker:docker@db:5432/gis
      - GEODATABASE_URL=postgis://geonode_data:docker@db:5432/geonode_data
      - GEOSERVER_LOCATION=http://geoserver/geoserver/
      - C_FORCE_ROOT=True
      - DEBUG=True
      - BROKER_URL=amqp://rabbitmq:5672
      - MEDIA_ROOT=/home/web/media
    links:
      - smtp:smtp
      - db:db
      - geoserver:geoserver
      - rabbitmq:rabbitmq
      - cache:cache
    volumes:
      - ../../django-bims:/home/web/django_project
      - ./static:/home/web/static:rw
      - ./media:/home/web/media:rw
      - ./logs:/var/log/
    restart: unless-stopped
    user: root

  dbbackups:
    image: kartoza/pg-backup:9.6
    hostname: pg-backups
    links:
      - db:db
    environment:
      # take care to let the project name below match that
      # declared in the top of the makefile
      - DUMPPREFIX=PG_bims
      # These are all defaults anyway, but setting explicitly in
      # case we ever want to ever use different credentials
      - PGUSER=docker
      - PGPASSWORD=docker
      - PGPORT=5432
      - PGHOST=db
      - PGDATABASE=gis
    restart: unless-stopped

  # This is normally the main entry point for a production server
  web:
    image: nginx
    hostname: nginx
    links:
      - uwsgi:uwsgi"
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.7-alpine
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    restart: on-failure

  cache:
   image: memcached
   entrypoint:
    - memcached
    - -m 64

  gbif_ipt:
    image: kartoza/gbif_ipt:latest
    links:
      - db:db
    volumes:
      - ./ipt:/usr/local/ip
    restart: unless-stopped

  firefox-debug:
    image: selenium/node-firefox-debug:3.141.59-dubnium
    volumes:
      - /dev/shm:/dev/shm
      - ./scripts:/scripts
    depends_on:
      - hub
    environment:
      HUB_HOST: hub
    ports:
      - 5900:5900

  firefox:
    image: selenium/node-firefox:3.141.59-dubnium
    volumes:
      - /dev/shm:/dev/shm
      - ./scripts:/scripts
    depends_on:
      - hub
    environment:
      HUB_HOST: hub

  hub:
    image: selenium/hub:3.141.59-dubnium
    volumes:
      - ./scripts:/scripts
    ports:
      - "4444:4444"
