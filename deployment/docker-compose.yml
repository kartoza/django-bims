#
# Production server with UWSGI configured to run on port 8080
# and web configured to run directly on port 80
#
# docker-compose build
# docker-compose up -d web
#
# See accompanying Make commands for easy collectstatic etc.

version: '3.7'
volumes:
  geoserver-datadir:
  rabbitmq:
  static-data:
  media-data:
  geocontext-scheduler-data:
x-common-django:
  &default-common-django
  image: bims_uwsgi:latest
  build:
    context: ../
    dockerfile: deployment/docker/Dockerfile
  command: uwsgi --ini /home/web/django_project/uwsgi.ini
  hostname: uwsgi
  working_dir: /home/web/django_project
  environment:
    - ADMIN_EMAILS=${ADMIN_EMAILS:-dimas@kartoza.com}
    - APP_NAME=bims
    - ASYNC_SIGNALS=True
    - BROKER_URL=amqp://rabbitmq:5672
    - C_FORCE_ROOT=1
    - CONTACT_US_EMAIL=${ADMIN_EMAILS:-dimas@kartoza.com}
    - ALLOWED_HOSTS=['django-bims.test']
    - DATABASE_HOST=db
    - DATABASE_NAME=${POSTGRES_DBNAME:-gis}
    - DATABASE_PASSWORD=${POSTGRES_PASS:-docker}
    - DATABASE_URL=postgis://${POSTGRES_USER:-docker}:${POSTGRES_PASS:-docker}@db:5432/${POSTGRES_DBNAME:-gis}
    - DATABASE_USERNAME=${POSTGRES_USER:-docker}
    - DJANGO_SETTINGS_MODULE=core.settings.prod_docker
    - GEOCONTEXT_URL=${GEOCONTEXT_URL:-https://geocontext.kartoza.com}
    - GEOSERVER_LOCATION=http://geoserver/geoserver/
    - GEOSERVER_LOCATION_SITE_LAYER=bims:location_site_view
    - GEOSERVER_PUBLIC_LOCATION=http://django-bims.test/geoserver/
    - GEOSERVER_ADMIN_USER=${GEOSERVER_USERNAME:-admin}
    - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_PASSWORD:-admingeoserver}
    - MEDIA_ROOT=/home/web/media
    - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
    - ROOT_URLCONF=core.urls
    - SITEURL=http://django-bims.test/
    - STATIC_ROOT=/home/web/static/static
    - VIRTUAL_HOST=bims.kartoza.com
    - VIRTUAL_PORT=8080
  volumes:
    - static-data:/home/web/static
    - media-data:/home/web/media
    - ./logs:/var/log/
  links:
    - db:db
    - geoserver:geoserver
    - rabbitmq:rabbitmq
    - cache:cache
    - worker:worker
    - searchworker:searchworker
    - geocontextworker:geocontextworker
  restart: unless-stopped
  user: root

services:

  db:
    image: dimasciput/postgis:9.6-2.4
    environment:
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_USER=${POSTGRES_USER:-docker}
      - POSTGRES_PASS=${POSTGRES_PASS:-docker}
    restart: unless-stopped

  geoserver:
    image: kartoza/geoserver:2.19.0
    restart: unless-stopped
    environment:
      HTTP_HOST: ${HTTP_HOST:-0.0.0.0}
      HTTP_PORT: ${GEOSERVER_PORT:-63305}
      GEOSERVER_ADMIN_USER: ${GEOSERVER_USERNAME:-admin}
      GEOSERVER_ADMIN_PASSWORD: ${GEOSERVER_PASSWORD:-admingeoserver}
      DATABASE_URL: postgres://${POSTGRES_USER:-docker}:${POSTGRES_PASS:-docker}@db:5432/${POSTGRES_DBNAME:-gis}
    depends_on:
      - db
    volumes:
      - geoserver-datadir:/opt/geoserver/data_dir/
    links:
      - db

  uwsgi:
    <<: *default-common-django

  worker:
    <<: *default-common-django
    entrypoint: [ ]
    hostname: worker
    command: celery worker --app=bims.celery:app -Q update -B -l debug
    links:
      - db:db
      - geoserver:geoserver
      - rabbitmq:rabbitmq
      - cache:cache
    volumes:
      - ../../django-bims:/home/web/django_project
      - ./static:/home/web/static:rw
      - ./media:/home/web/media:rw
      - ./logs:/var/log/

  geocontextworker:
    <<: *default-common-django
    entrypoint: [ ]
    hostname: worker
    command: celery worker --app=bims.celery:app --schedule /home/geocontext-scheduler/celerybeat-schedule -Q geocontext -B -l debug
    links:
      - db:db
      - geoserver:geoserver
      - rabbitmq:rabbitmq
      - cache:cache
    volumes:
      - ../../django-bims:/home/web/django_project
      - ./static:/home/web/static:rw
      - ./media:/home/web/media:rw
      - ./logs:/var/log/
      - geocontext-scheduler-data:/home/geocontext-scheduler

  searchworker:
    <<: *default-common-django
    entrypoint: [ ]
    hostname: worker
    command: celery worker --app=bims.celery:app -Q search -B -l debug
    links:
      - db:db
      - geoserver:geoserver
      - rabbitmq:rabbitmq
      - cache:cache
    volumes:
      - ../../django-bims:/home/web/django_project
      - ./static:/home/web/static:rw
      - ./media:/home/web/media:rw
      - ./logs:/var/log/

  webpack-watcher:
    <<: *default-common-django
    entrypoint: [ ]
    command: bash -c 'cd /home/web/django_project/bims/; webpack --mode development && webpack --watch --progress'
    volumes:
      - ../../django-bims:/home/web/django_project
      - ./static:/home/web/static:rw
      - ./media:/home/web/media:rw
      - ./logs:/var/log/

  dbbackups:
    image: kartoza/pg-backup:9.6
    hostname: pg-backups
    links:
      - db:db
    environment:
      # take care to let the project name below match that
      # declared in the top of the makefile
      - DUMPPREFIX=PG_bims
      # These are all defaults anyway, but setting explicitly in
      # case we ever want to ever use different credentials
      - PGUSER=${POSTGRES_USER:-docker}
      - PGPASSWORD=${POSTGRES_PSS:-docker}
      - PGPORT=5432
      - PGHOST=db
      - PGDATABASE=${POSTGRES_DBNAME:-gis}
    restart: unless-stopped

  # This is normally the main entry point for a production server
  web:
    image: nginx
    hostname: nginx
    links:
      - uwsgi:uwsgi"
    restart: unless-stopped
    volumes:
      - static-data:/home/web/static
      - media-data:/home/web/media

  rabbitmq:
    image: rabbitmq:3.7-alpine
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    restart: on-failure

  cache:
   image: memcached
   entrypoint:
    - memcached
    - -m 64

  gbif_ipt:
    image: kartoza/gbif_ipt:latest
    links:
      - db:db
    volumes:
      - ./ipt:/usr/local/ip
    restart: unless-stopped

  firefox-debug:
    image: selenium/node-firefox-debug:3.141.59-dubnium
    volumes:
      - /dev/shm:/dev/shm
      - ./scripts:/scripts
    depends_on:
      - hub
    environment:
      HUB_HOST: hub
    ports:
      - 5900:5900

  firefox:
    image: selenium/node-firefox:3.141.59-dubnium
    volumes:
      - /dev/shm:/dev/shm
      - ./scripts:/scripts
    depends_on:
      - hub
    environment:
      HUB_HOST: hub

  hub:
    image: selenium/hub:3.141.59-dubnium
    volumes:
      - ./scripts:/scripts
    ports:
      - "4444:4444"
