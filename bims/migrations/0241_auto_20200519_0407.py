# Generated by Django 2.2.12 on 2020-05-19 04:07

import colorfield.fields
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    dependencies = [
        ('bims', '0240_auto_20200513_0252'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='sourcereference',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='sourcereferencebibliography',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='sourcereferencedatabase',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='sourcereferencedocument',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AlterModelOptions(
            name='visitor',
            options={'ordering': ('-start_time',)},
        ),
        migrations.AlterModelManagers(
            name='sitesetting',
            managers=[
                ('singleton', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterField(
            model_name='algaedata',
            name='ai',
            field=models.FloatField(blank=True, null=True, verbose_name='Autotrophic Index (AI)'),
        ),
        migrations.AlterField(
            model_name='algaedata',
            name='indicator_afdm',
            field=models.CharField(blank=True, default='', max_length=100, verbose_name='Biomass Indicator: Ash Free Dry Mass'),
        ),
        migrations.AlterField(
            model_name='algaedata',
            name='indicator_chl_a',
            field=models.CharField(blank=True, default='', max_length=100, verbose_name='Biomass Indicator: Chl A'),
        ),
        migrations.AlterField(
            model_name='algaedata',
            name='survey',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='algae_data', to='bims.Survey'),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='abundance_type',
            field=models.CharField(blank=True, choices=[('number', 'Number'), ('percentage', 'Percentage'), ('density', 'Density')], default='number', max_length=50),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='analyst',
            field=models.ForeignKey(blank=True, help_text='The person that did the analysis', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='biologicalcollectionrecord_analyst', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='category',
            field=models.CharField(blank=True, choices=[('alien', 'Non-Native'), ('indigenous', 'Native')], default='', help_text='Origin', max_length=50),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='collection_habitat',
            field=models.CharField(blank=True, choices=[('euryhaline', 'Euryhaline'), ('freshwater', 'Freshwater')], default='', max_length=200),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='collector',
            field=models.CharField(blank=True, default='', help_text='Collector name in string value, this is useful for collector values from GBIF and other third party sources', max_length=300, verbose_name='collector or observer'),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='collector_user',
            field=models.ForeignKey(blank=True, help_text='The user object of the actual capturer/collector of this data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='biologicalcollectionrecord_collector_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='institution_id',
            field=models.CharField(default='bims', help_text='An identifier for the institution having custody of the object(s) or information referred to in the record.', max_length=200, verbose_name='Custodian'),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='module_group',
            field=models.ForeignKey(blank=True, help_text='Which module this collection belong to', null=True, on_delete=django.db.models.deletion.SET_NULL, to='bims.TaxonGroup'),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='original_species_name',
            field=models.CharField(blank=True, default='', max_length=200),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='reference',
            field=models.CharField(blank=True, default='', max_length=300),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='reference_category',
            field=models.CharField(blank=True, default='', max_length=200),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='sampling_effort',
            field=models.CharField(blank=True, default='', max_length=50),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='sampling_method_string',
            field=models.CharField(blank=True, default='', max_length=50),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='source_collection',
            field=models.CharField(blank=True, default='', help_text='e.g. SANBI', max_length=200),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='taxonomy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bims.Taxonomy', verbose_name='Taxonomy'),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='upstream_id',
            field=models.CharField(blank=True, default='', help_text='Upstream id, e.g. Gbif key', max_length=200),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='uuid',
            field=models.CharField(blank=True, help_text='Collection record uuid', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='biotope',
            name='biotope_form',
            field=models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2')], max_length=2),
        ),
        migrations.AlterField(
            model_name='biotope',
            name='biotope_type',
            field=models.CharField(blank=True, choices=[('broad', 'Broad'), ('specific', 'Specific'), ('substratum', 'Substratum')], max_length=10),
        ),
        migrations.AlterField(
            model_name='carouselheader',
            name='order',
            field=models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order'),
        ),
        migrations.AlterField(
            model_name='chem',
            name='chem_unit',
            field=models.CharField(blank=True, choices=[('MEQ_L', 'meq/l'), ('PERCENT', '%'), ('PH_UNIT', 'pH unit'), ('PH_UNITS', 'pH units'), ('NTU', 'NTU'), ('MS_M', 'mS/m'), ('MG_L', 'mg/l'), ('MG_L_5_DAYS', 'mg/l (5 days)'), ('PER_100_ML', 'Per 100ml'), ('M', 'm'), ('OC', 'degrees C'), ('APHA_UNITS', 'APHA units'), ('MG_S', 'mg/s'), ('MG_M2', 'mg/m2')], max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='csvdocument',
            name='csv_file',
            field=models.FileField(upload_to='csv/'),
        ),
        migrations.AlterField(
            model_name='iucnstatus',
            name='category',
            field=models.CharField(blank=True, choices=[('LC', 'Least concern'), ('NT', 'Near threatened'), ('VU', 'Vulnerable'), ('EN', 'Endangered'), ('CR', 'Critically endangered'), ('EW', 'Extinct in the wild'), ('EX', 'Extinct'), ('DD', 'Data deficient'), ('NE', 'Not evaluated')], default='', max_length=50),
        ),
        migrations.AlterField(
            model_name='iucnstatus',
            name='colour',
            field=colorfield.fields.ColorField(default='#009106', max_length=18),
        ),
        migrations.AlterField(
            model_name='locationcontext',
            name='value',
            field=models.CharField(blank=True, default='', max_length=255),
        ),
        migrations.AlterField(
            model_name='locationcontextgroup',
            name='geocontext_group_key',
            field=models.CharField(blank=True, default='', help_text='Group key from geocontext', max_length=255),
        ),
        migrations.AlterField(
            model_name='locationcontextgroup',
            name='key',
            field=models.CharField(blank=True, default='', max_length=100),
        ),
        migrations.AlterField(
            model_name='locationcontextgroup',
            name='layer_name',
            field=models.CharField(blank=True, default='', max_length=255),
        ),
        migrations.AlterField(
            model_name='locationsite',
            name='additional_data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Additional json data'),
        ),
        migrations.AlterField(
            model_name='locationsite',
            name='creator',
            field=models.ForeignKey(blank=True, help_text='The creator of the site', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='site_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='locationsite',
            name='latitude',
            field=models.FloatField(blank=True, help_text='Latitude of location site', null=True),
        ),
        migrations.AlterField(
            model_name='locationsite',
            name='legacy_site_code',
            field=models.CharField(blank=True, default='', max_length=100),
        ),
        migrations.AlterField(
            model_name='locationsite',
            name='location_context',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='This is intended for filtering', null=True, verbose_name='Formatted location_context_document'),
        ),
        migrations.AlterField(
            model_name='locationsite',
            name='location_context_document',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='This document is generated from GeoContext by using management command or changing the geometry.', null=True, verbose_name='Document for location context as JSON.'),
        ),
        migrations.AlterField(
            model_name='locationsite',
            name='longitude',
            field=models.FloatField(blank=True, help_text='Longitude of location site', null=True),
        ),
        migrations.AlterField(
            model_name='locationsite',
            name='original_geomorphological',
            field=models.CharField(blank=True, help_text='Original geomorphological zone from spatial layer', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='locationsite',
            name='owner',
            field=models.ForeignKey(blank=True, help_text='The owner of the site', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='site_owner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='locationsite',
            name='refined_geomorphological',
            field=models.CharField(blank=True, choices=[('Source zone', 'Source zone'), ('Mountain headwater stream', 'Mountain headwater stream'), ('Mountain stream', 'Mountain stream'), ('Transitional', 'Transitional'), ('Upper foothill', 'Upper foothill'), ('Lower foothill', 'Lower foothill'), ('Lowland river', 'Lowland river'), ('Rejuvenated bedrock fall / cascades', 'Rejuvenated bedrock fall / cascades'), ('Rejunevated foothill', 'Rejunevated foothill'), ('Upland floodplain', 'Upland floodplain'), ('Upland transitional', 'Upland transitional'), ('Foothil/Transitional', 'Foothil/Transitional'), ('Upland plateau', 'Upland plateau'), ('Foothill', 'Foothill')], help_text='Would be used in preference to the one discovered in geocontext', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='locationsite',
            name='river',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sass.River'),
        ),
        migrations.AlterField(
            model_name='locationsite',
            name='site_code',
            field=models.CharField(blank=True, default='', max_length=100),
        ),
        migrations.AlterField(
            model_name='locationsite',
            name='site_description',
            field=models.CharField(blank=True, default='', max_length=500),
        ),
        migrations.AlterField(
            model_name='nonbiodiversitylayer',
            name='get_feature_format',
            field=models.TextField(default='text/plain', max_length=100),
        ),
        migrations.AlterField(
            model_name='nonbiodiversitylayer',
            name='order',
            field=models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order'),
        ),
        migrations.AlterField(
            model_name='nonbiodiversitylayer',
            name='wms_format',
            field=models.CharField(default='image/png', max_length=64),
        ),
        migrations.AlterField(
            model_name='profile',
            name='data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, default='', null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='full_name',
            field=models.CharField(blank=True, default='', max_length=150, null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='other',
            field=models.CharField(blank=True, default='', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='qualifications',
            field=models.CharField(blank=True, default='', max_length=250, null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='role',
            field=models.CharField(blank=True, choices=[('water_resource_manager', 'Water Resource Manager'), ('researcher', 'Researcher'), ('consultant', 'Consultant'), ('conservation_planner', 'Conservation Planner'), ('citizen', 'Citizen')], max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='rivercatchment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bims.RiverCatchment', verbose_name='Parent'),
        ),
        migrations.AlterField(
            model_name='searchprocess',
            name='category',
            field=models.CharField(choices=[('cluster_generation', 'Cluster Generation'), ('search_results', 'Search Results'), ('sites_summary', 'Site Summary'), ('taxon_summary', 'Taxon Summary')], max_length=50),
        ),
        migrations.AlterField(
            model_name='shapefile',
            name='shapefile',
            field=models.FileField(upload_to='shapefile/'),
        ),
        migrations.AlterField(
            model_name='siteimage',
            name='image',
            field=models.ImageField(upload_to='site_images'),
        ),
        migrations.AlterField(
            model_name='siteimage',
            name='site_visit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sass.SiteVisit'),
        ),
        migrations.AlterField(
            model_name='sitesetting',
            name='default_basemap',
            field=models.CharField(default='Terrain', help_text='The default basemap layer that is displayed on the map', max_length=100),
        ),
        migrations.AlterField(
            model_name='sitesetting',
            name='default_center_map',
            field=models.CharField(default='22.948492328125,-31.12543669218031', max_length=100),
        ),
        migrations.AlterField(
            model_name='sitesetting',
            name='default_data_source',
            field=models.CharField(blank=True, help_text='Default data source when adding new collection', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='sitesetting',
            name='default_extent_map',
            field=models.CharField(default='5.207535937500003,-37.72038269917067,47.3950359375,-18.54426493227018', max_length=100),
        ),
        migrations.AlterField(
            model_name='sitesetting',
            name='default_location_site_cluster',
            field=models.CharField(default='default_location_site_cluster', help_text='SQL view name of the location site cluster which used on the map', max_length=100),
        ),
        migrations.AlterField(
            model_name='sitesetting',
            name='default_team_name',
            field=models.CharField(blank=True, help_text='Default team name', max_length=150, null=True),
        ),
        migrations.AlterField(
            model_name='sitesetting',
            name='disclaimer_doc_text',
            field=models.CharField(blank=True, default='I hereby confirm that I am the owner of these data and/or document and agree to these being shared via the FBIS platform for download by registered FBIS users.', max_length=300),
        ),
        migrations.AlterField(
            model_name='sitesetting',
            name='disclaimer_form_text',
            field=models.CharField(blank=True, default='I agree to these data being shared via the FBIS platform for visualisation and download by registered FBIS users', max_length=300),
        ),
        migrations.AlterField(
            model_name='sitesetting',
            name='geocontext_keys',
            field=models.CharField(blank=True, default='political_boundary_group,rainfall_group', help_text='Default location context group keys that will be fetched from Geocontext, separated by commas.', max_length=300),
        ),
        migrations.AlterField(
            model_name='sitesetting',
            name='github_feedback_repo',
            field=models.CharField(blank=True, default='', help_text='Github repo for users`s feedback', max_length=100),
        ),
        migrations.AlterField(
            model_name='sitesetting',
            name='github_feedback_token',
            field=models.CharField(blank=True, default='', help_text='Access token for Github feedback repo', max_length=100),
        ),
        migrations.AlterField(
            model_name='sitesetting',
            name='map_default_filters',
            field=django.contrib.postgres.fields.jsonb.JSONField(default=[], help_text='Which filters are selected by default, the format must be as follows : [{"filter_key": "sourceCollection", "filter_values": ["bims"]}]'),
        ),
        migrations.AlterField(
            model_name='sitesetting',
            name='spatial_filter_layer_style',
            field=models.CharField(blank=True, default='red_outline', help_text='Style name for spatial filter layer', max_length=100),
        ),
        migrations.AlterField(
            model_name='sourcereference',
            name='source_name',
            field=models.CharField(blank=True, default='', max_length=512),
        ),
        migrations.AlterField(
            model_name='spatialscale',
            name='from_geocontext',
            field=models.BooleanField(default=True, help_text='Is this data come from geocontext?'),
        ),
        migrations.AlterField(
            model_name='spatialscale',
            name='type',
            field=models.CharField(choices=[('input', 'Input'), ('select', 'Select')], max_length=50),
        ),
        migrations.AlterField(
            model_name='spatialscalegroup',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bims.SpatialScaleGroup', verbose_name='Parent'),
        ),
        migrations.AlterField(
            model_name='spatialscalegroup',
            name='type',
            field=models.CharField(blank=True, choices=[('input', 'Input'), ('select', 'Select')], max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='survey',
            name='analyst',
            field=models.ForeignKey(blank=True, help_text='The person that did the analysis', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_analyst', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='survey',
            name='collector_user',
            field=models.ForeignKey(blank=True, help_text='The user object of the actual capturer/collector of this data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_collector_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='taxongroup',
            name='category',
            field=models.CharField(blank=True, choices=[('SPECIES_MODULE', 'Species Module'), ('SPECIES_CLASS', 'Species Class'), ('SASS_TAXON_GROUP', 'SASS Taxon Group'), ('DIVISION_GROUP', 'Division Group')], max_length=50, verbose_name='Taxonomic Group Category'),
        ),
        migrations.AlterField(
            model_name='taxongroup',
            name='logo',
            field=models.ImageField(blank=True, null=True, upload_to='module_logo'),
        ),
        migrations.AlterField(
            model_name='taxongroup',
            name='source_collection',
            field=models.CharField(blank=True, help_text='Additional filter for search collections', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='additional_data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Additional json data'),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='author',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Author'),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='canonical_name',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Canonical Name'),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='endemism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bims.Endemism', verbose_name='Endemism'),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='gbif_data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Json data from gbif'),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='gbif_key',
            field=models.IntegerField(blank=True, null=True, verbose_name='GBIF Key'),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='iucn_data',
            field=models.TextField(blank=True, null=True, verbose_name='Data from IUCN'),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='iucn_redlist_id',
            field=models.IntegerField(blank=True, null=True, verbose_name='IUCN taxon id'),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='iucn_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bims.IUCNStatus', verbose_name='IUCN status'),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='legacy_canonical_name',
            field=models.CharField(blank=True, default='', max_length=700, verbose_name='Legacy Canonical Name'),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='origin',
            field=models.CharField(blank=True, choices=[('alien', 'Non-Native'), ('indigenous', 'Native')], default='', help_text='Origin', max_length=50),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bims.Taxonomy', verbose_name='Parent'),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='rank',
            field=models.CharField(blank=True, choices=[('SUBSPECIES', 'Sub Species'), ('SPECIES', 'Species'), ('GENUS', 'Genus'), ('FAMILY', 'Family'), ('SUPERFAMILY', 'Super Family'), ('ORDER', 'Order'), ('CLASS', 'Class'), ('SUBCLASS', 'Sub Class'), ('PHYLUM', 'Phylum'), ('KINGDOM', 'Kingdom'), ('DOMAIN', 'Domain'), ('LIFE', 'Life'), ('CULTIVAR_GROUP', 'Cultivar Group'), ('SUBORDER', 'Sub Order'), ('INFRAORDER', 'Infra Order'), ('SUBFAMILY', 'Sub Family')], max_length=50, verbose_name='Taxonomic Rank'),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='scientific_name',
            field=models.CharField(max_length=200, verbose_name='Scientific Name'),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='taxonomic_status',
            field=models.CharField(blank=True, choices=[('ACCEPTED', 'Accepted'), ('DOUBTFUL', 'Doubtful'), ('SYNONYM', 'Synonym'), ('HETEROTYPIC_SYNONYM', 'Heterotypic Synonym'), ('HOMOTYPIC_SYNONYM', 'Homotypic Synonym'), ('PROPARTE_SYNONYM', 'Proparte Synonym'), ('MISAPPLIED', 'Misapplied')], max_length=50, verbose_name='Taxonomic Status'),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='verified',
            field=models.BooleanField(default=False, help_text='The data has been verified'),
        ),
        migrations.AlterField(
            model_name='biologicalcollectionrecord',
            name='abundance_type',
            field=models.CharField(blank=True, choices=[(b'number', b'Number'),
                                                        (b'percentage',
                                                         b'Percentage'), (
                                                        b'density',
                                                        b'Density'), (
                                                        b'species_valve_per_frustule_count',
                                                        b'Species valve/frustule count'),
                                                        (
                                                        b'density_cells_per_m2',
                                                        b'Density (cells/m2)'),
                                                        (
                                                        b'density_cells_per_mL',
                                                        b'Density (cells/mL)')],
                                   default=b'number', max_length=50),
        ),
    ]
